package package_Vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import package_Modelo.Alumno;
import package_Modelo.Inscripcion;
import package_Modelo.Materia;
import package_Persistencia.AlumnoData;
import package_Persistencia.InscripcionData;
import package_Persistencia.MateriaData;

/**
 *
 * @author Usuario
 */
public class VistaNotas extends javax.swing.JInternalFrame {

    ArrayList<Materia> materias = new ArrayList();
    ArrayList<Alumno> alumnos = new ArrayList();
    private MateriaData matData = new MateriaData();
    private AlumnoData alumData = new AlumnoData();
    private InscripcionData inscData = new InscripcionData();

    private DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    public VistaNotas() {
        initComponents();
        matData = new MateriaData();
        materias = matData.mostrarMaterias();
        alumnos = (ArrayList<Alumno>) alumData.mostrarAlumnos();
        armarCabecera();
        cargarAlumnos();
        jB_guardar.setEnabled(false);
        jTxt_nota.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jB_guardar = new javax.swing.JButton();
        jB_salir = new javax.swing.JButton();
        jC_alumno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_tabla = new javax.swing.JTable();
        jB_modificar = new javax.swing.JButton();
        jTxt_nota = new javax.swing.JTextField();
        jLbl_mensaje = new javax.swing.JLabel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Carga de Notas");

        jLabel2.setText("Seleccione un alumno:");

        jB_guardar.setText("Guardar");
        jB_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_guardarActionPerformed(evt);
            }
        });

        jB_salir.setText("Salir");
        jB_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_salirActionPerformed(evt);
            }
        });

        jC_alumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_alumnoActionPerformed(evt);
            }
        });

        jT_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jT_tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jT_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jT_tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jT_tabla);

        jB_modificar.setText("Modificar Nota");
        jB_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_modificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(137, 137, 137)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jC_alumno, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jB_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_salir))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLbl_mensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxt_nota, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jC_alumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxt_nota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbl_mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_guardar)
                    .addComponent(jB_salir)
                    .addComponent(jB_modificar))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jC_alumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_alumnoActionPerformed
        int dniSeleccionado = obtenerDNISeleccionado();
        Alumno alumno = alumData.buscarAlumnoporDNI(dniSeleccionado);
        if (alumno != null) {
            cargarMaterias(alumno);
        }
        jB_modificar.setEnabled(true);
        jB_guardar.setEnabled(false);
        jLbl_mensaje.setText("");
        jTxt_nota.setVisible(false);
        jTxt_nota.setText("");
    }//GEN-LAST:event_jC_alumnoActionPerformed

    private void jB_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_salirActionPerformed
        dispose();
    }//GEN-LAST:event_jB_salirActionPerformed

    private void jB_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_guardarActionPerformed
        int filaSeleccionada = jT_tabla.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccionar la fila que desea actualizar");
        } else {
            try {
                Double nuevaNota = Double.parseDouble(jTxt_nota.getText());
                int idMateria = (Integer) jT_tabla.getValueAt(filaSeleccionada, 0);
                int dniSeleccionado = obtenerDNISeleccionado();
                Alumno alumno = alumData.buscarAlumnoporDNI(dniSeleccionado);
                if (alumno != null && nuevaNota > 0 && nuevaNota <= 10) {
                    inscData.actualizarNota(alumno.getIdAlumno(), idMateria, nuevaNota);
                    jTxt_nota.setVisible(false);
                    jTxt_nota.setText("");
                    jB_modificar.setEnabled(true);
                    jB_guardar.setEnabled(false);
                    jLbl_mensaje.setText("");
                    cargarMaterias(alumno);
                } else {
                    JOptionPane.showMessageDialog(this, "No se modificó la nota: el valor indicado debe tener un valor entre 0 y 10.");
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un número válido");
            }
        }
    }//GEN-LAST:event_jB_guardarActionPerformed

    private void jT_tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_tablaMouseClicked
        jTxt_nota.setVisible(false);
        jTxt_nota.setText("");
        jB_modificar.setEnabled(true);
        jB_guardar.setEnabled(false);
        jLbl_mensaje.setText("");
    }//GEN-LAST:event_jT_tablaMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        jT_tabla.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void jB_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_modificarActionPerformed
        int filaSel = jT_tabla.getSelectedRow();
        if (filaSel == -1) {
            JOptionPane.showMessageDialog(null, "Seleccionar la fila que desea actualizar");
        } else {
            jB_modificar.setEnabled(false);
            jTxt_nota.setVisible(true);
            jB_guardar.setEnabled(true);
            String nombreMat = (String) jT_tabla.getValueAt(filaSel, 1);
            jLbl_mensaje.setText("Ingrese la nota para " + nombreMat + ":");
        }
    }//GEN-LAST:event_jB_modificarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_guardar;
    private javax.swing.JButton jB_modificar;
    private javax.swing.JButton jB_salir;
    private javax.swing.JComboBox<Alumno> jC_alumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLbl_mensaje;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jT_tabla;
    private javax.swing.JTextField jTxt_nota;
    // End of variables declaration//GEN-END:variables

    private void cargarAlumnos() {
        ArrayList<Alumno> listaAlumnos = alumData.mostrarAlumnos();
        jC_alumno.removeAllItems();
        for (Alumno alumno : listaAlumnos) {
            jC_alumno.addItem(alumno);
        }
    }

    private void armarCabecera() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");
        jT_tabla.setModel(modelo);
    }

    private void cargarMaterias(Alumno alumno) {
        ArrayList<Inscripcion> inscripciones = (ArrayList<Inscripcion>) inscData.obtenerInscripcionesPorAlumno(alumno.getIdAlumno());
        DefaultTableModel modelo = (DefaultTableModel) jT_tabla.getModel();
        modelo.setRowCount(0);
        for (Inscripcion inscripcion : inscripciones) {
            modelo.addRow(new Object[]{
                inscripcion.getMateria().getIdMateria(),
                inscripcion.getMateria().getNombre(),
                inscripcion.getNota()
            });
        }
    }

    private int obtenerDNISeleccionado() {
        Alumno alumnoSeleccionado = (Alumno) jC_alumno.getSelectedItem();
        if (alumnoSeleccionado != null) {
            return alumnoSeleccionado.getDni();
        }
        return -1;
    }
}
